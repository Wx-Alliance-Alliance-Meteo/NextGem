if(NOT ${CMAKE_FIND_PACKAGE_NAME}_FOUND)
   set(${CMAKE_FIND_PACKAGE_NAME}_VERSION @PROJECT_VERSION@ CACHE INTERNAL "${CMAKE_FIND_PACKAGE_NAME} version")

   @PACKAGE_INIT@

   include(CMakeFindDependencyMacro)

   function(maybe_message type message)
      if(NOT ${CMAKE_FIND_PACKAGE_NAME}_FIND_QUIETLY )
         message(${type} "${message}")
      endif()
   endfunction()

   set(_targets ${CMAKE_FIND_PACKAGE_NAME}::${CMAKE_FIND_PACKAGE_NAME})

   include(${CMAKE_CURRENT_LIST_DIR}/${CMAKE_FIND_PACKAGE_NAME}-targets.cmake)

   maybe_message(STATUS "Found ${CMAKE_FIND_PACKAGE_NAME} ${${CMAKE_FIND_PACKAGE_NAME}_VERSION} in ${PACKAGE_PREFIX_DIR}")
   if(${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
      maybe_message(STATUS "Components ${${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS}")
   endif()
   maybe_message(STATUS "Imported targets: ${_targets} for static libraries")
   unset(_targets)
   unset(_enabled_languages)
endif()
