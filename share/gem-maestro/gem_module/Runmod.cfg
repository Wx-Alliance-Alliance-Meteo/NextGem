#!/bin/bash
_checkpoint 0 "GEM_module Runmod.cfg"

# Do not rerun setup for restarts
if [[ ${Runmod} != '000' ]] ; then export TASK_SETUP_NOEXEC=1 ; fi

PREPTSK_mach=$(nodeinfo -n ${SEQ_CONTAINER}/Prep -f res | grep machine= | cut -d '=' -f 2)
SRC_PREP=${SEQ_EXP_HOME}/hub/${PREPTSK_mach}/work/${SEQ_DATE}/${SEQ_CONTAINER}/Prep/output

# IAU inputs only if available
iau_upload=${SRC_PREP}/cfg_\${gem_domain}/IAUREP

# Restart file is targeted only if available and at the first iteration Runmod=000
rst_upload=/dev/null/restart_file
if [[ ${Runmod} == '000' ]] ; then rst_upload=${SRC_PREP}/cfg_\${gem_domain}/restart_file ; fi

# Link to uploaded user data if available
ANALYSIS=${SRC_PREP}/cfg_\${gem_domain}/ANALYSIS
mod_analysis=${SRC_PREP}/cfg_\${gem_domain}/analysis
mod_inrep=${SRC_PREP}/cfg_\${gem_domain}/model_inrep
mod_upload=${model_input}
if [ "${mod_upload}" == "<no value>" ] ; then mod_upload=/NODIR ; fi

# Link to uploaded outcfg.out file if available
outcfg_upload=${SRC_PREP}/shared/outcfg.out

BINMOD=$(which maingemdm)

if [[ ! -e ${MOD_GEM_ozone} ]] ; then
   MOD_GEM_ozone=${CMCCONST}/${MOD_GEM_ozone}
fi

# Create an architecture-specific optimized environment
if [[ -r ${ENVFILE} ]] ; then cat ${ENVFILE}; . ${ENVFILE} ; fi

gem_version_majmin=${gem_version:-${GEM_VERSION}}
gem_version_majmin=${gem_version_majmin%.*}
modeldata=${ATM_MODEL_DFILES}/datafiles/modeldata/${gem_version_majmin}
if [ ! -e ${modeldata} ] ; then
   modeldata=$(ls -1d ${ATM_MODEL_DFILES}/datafiles/modeldata/[0-9]* | tail -1)
fi
###########################################################################
# <input type="loop" var="gem_domain" start="${DOMAIN_start4}" end="${DOMAIN_end4}">
# cfg_${gem_domain}/ANALYSIS           `eval f1=${ANALYSIS} ; if [[ -e ${f1} ]] ; then echo ${f1} ; else echo "'<no value>'" ;fi`
# cfg_${gem_domain}/MODEL_ANALYSIS     `eval f1=${mod_analysis} ; if [[ -e ${f1} ]] ; then echo ${f1} ; else echo "'<no value>'" ;fi`
# cfg_${gem_domain}/MODEL_INREP        `eval f1=${mod_inrep}    ; if [[ -e ${f1} ]] ; then echo ${f1} ; else echo "'<no value>'" ;fi`
# cfg_${gem_domain}/MODEL_INPUT        `eval f1=${mod_upload}   ; if [[ -e ${f1} ]] ; then echo ${f1}/\* ; else echo "'<no value>'" ; fi` ${modeldata}/*
# cfg_${gem_domain}/model_settings.nml  ${SRC_PREP}/cfg_${gem_domain}/gem_settings.nml
# cfg_${gem_domain}/restart.tar        `eval f1=${rst_upload}   ; if [[ -e ${f1} ]] ; then echo ${f1} ; else echo "'<no value>'" ;fi`
# cfg_${gem_domain}/GEOPHY              ${SRC_PREP}/shared/GEOPHY
# cfg_${gem_domain}/CLIMATO             ${SRC_PREP}/shared/CLIMATO
# cfg_${gem_domain}/output_settings    `eval f1=${outcfg_upload}; if [[ -e ${f1} ]] ; then echo ${f1} ; else echo "'<no value>'" ;fi`
# cfg_${gem_domain}/IAUREP             `eval f1=${iau_upload}   ; if [[ -e ${f1} ]] ; then echo ${f1} ; else echo "${MOD_GEM_iaurep}" ;fi`
# cfg_${gem_domain}/physics_input_table ${SRC_PREP}/cfg_${gem_domain}/physics_in_table
# cfg_${gem_domain}/ozone_clim.fst      ${MOD_GEM_ozone}
# cfg_${gem_domain}/rad_table.fst       ${MOD_GEM_radtab}
# cfg_${gem_domain}/constantes          ${MOD_GEM_const}
# cfg_${gem_domain}/CACHE               ${MOD_GEM_cache}
# cfg_${gem_domain}/SERVER_IO           ${MOD_GEM_serverIO}
# </input>
############################################################################
# <executables>
# Um_checkfs.sh         Um_checkfs.sh
# r.mpirun              r.run_in_parallel
# ATM_MOD.Abs           ${BINMOD}
# runmod.sh             runmod.sh
# rungem.sh             rungem.sh
# gem_monitor_output    gem_monitor_output
# gem_monitor_end       gem_monitor_end
# launch_sortie.sh      GM_process_output.sh
# rpy.nml_set           rpy.nml_set
# </executables>
############################################################################
# <output>
# </output>
############################################################################

_checkpoint 1 "GEM_module Runmod.cfg"
